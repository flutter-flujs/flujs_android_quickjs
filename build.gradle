import com.vanniktech.maven.publish.SonatypeHost
import com.vanniktech.maven.publish.AndroidSingleVariantLibrary

def Prop(name) {
    return project.providers.gradleProperty(name)
}

group Prop("GROUP")
version Prop("VERSION_NAME")

buildscript {
    repositories {
        google()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:8.0.0"
        classpath "com.vanniktech:gradle-maven-publish-plugin:0.30.0"
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: "com.android.library"
apply plugin: "maven-publish"
apply plugin: "com.vanniktech.maven.publish.base"

android {
    if (project.android.hasProperty("namespace")) {
        namespace = "cn.humphreyd.flujs"
    }
    compileSdkVersion 31
    ndkVersion = android.ndkVersion
    defaultConfig {
        aarMetadata {
            minCompileSdk = 16
        }
        minSdk = 16
    }
    sourceSets {
        main.jniLibs.srcDirs += "src/main/jniLibs"
    }
    publishing {
        singleVariant("aar") 
    }
}

publishing {
    repositories {
        mavenLocal() // ~/.m2/respository
        // maven {
        //     name = "quickjs"
        //     url = uri("https://maven.pkg.github.com/flutter-flujs/flujs_android_quickjs")
        //     credentials {
        //         username = System.getenv("GITHUB_ACTOR") || Prop("GITHUB_ACTOR")
        //         password = System.getenv("GITHUB_TOKEN") || Prop("GITHUB_TOKEN")
        //     }
        // }
        // build dir
        maven {
            name = 'myrepo'
            url = layout.buildDirectory.dir('repo')
        }
    }
    publications {
        aar(MavenPublication) {
            groupId = Prop('GROUP')
            artifactId = Prop('POM_ARTIFACT_ID')
            version = Prop('VERSION_NAME')
            
            def aarDir = project.file("${project.buildDir}/outputs/aar/")
            def aarFiles = aarDir.listFiles().findAll { it.name.endsWith('release.aar') }.collect { it.absolutePath }
            println("ðŸŒ¹ ${aarFiles}, ${artifacts}")
            artifacts = aarFiles

            pom {
                name = Prop('POM_NAME')
                description = Prop('POM_DESCRIPTION')
                url = Prop('POM_URL')
                licenses {
                    license {
                        name = Prop('POM_LICENSE_NAME')
                        url = Prop('POM_LICENSE_URL')
                    }
                    developers {
                        developer {
                            id = Prop('POM_DEVELOPER_ID')
                            name = Prop('POM_DEVELOPER_NAME')
                            email = Prop('POM_DEVELOPER_EMAIL')
                        }
                    }
                    scm {
                        connection = Prop('POM_SCM_CONNECTION')
                        developerConnection = Prop('POM_SCM_DEV_CONNECTION')
                        url = Prop('POM_SCM_URL')
                    }
                }
            }
        }
    }
}

def artifactName(flavor, version) {
    return "flujs-quickjs-${flavor}-${version}.aar"
}

mavenPublishing {
    pomFromGradleProperties()
    // configure(new AndroidMultiVariantLibrary(true, true, ['release'] as Set, ['abi': ['arm', 'x86'] as Set] as Map))
     configure(new AndroidSingleVariantLibrary("release", false, false))
    signAllPublications()
}